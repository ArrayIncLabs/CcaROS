
#include "ros/ros.h"
#include "geometry_msgs/Twist.h"
int main(int argc, char **argv)
{
	ros::init(argc, argv, "auto_nav");
	ros::NodeHandle n;
	ros::Publisher chatter_pub = n.advertise<geometry_msgs::Twist>("cmd_vel",1000);
	ros::Rate loop_rate(1);
	ROS_INFO("\tReading from keyboard\t");
	ROS_INFO("\t======================================\t");
	ROS_INFO("\tPress arrow keys to Navigate the robot\t");
	ROS_INFO("\t======================================\t");
	char ch;
	while(ros::ok())
	{
		fflush(stdin);
		ch = getchar();
		printf("entered key is:: %d\n", (int)ch);
		/*std_msgs::String msg;
		geometry_msgs::Twist stop;
		stop.linear.x=0;
		stop.linear.y=0;
		stop.linear.z=0;
		stop.angular.x=0;
		stop.angular.y=0;
		stop.angular.z=0;*/
	}
	return 0;
}




/*
#include "ros/ros.h"
#include "std_msgs/String.h"
#include <sstream>

int main(int argc, char **argv)
{
	ros::init(argc, argv, "talker");
	ros::NodeHandle n;
	ros::Publisher chatter_pub = n.advertise<std_msgs::String>("chatter",1000);
	ros::Rate loop_rate(1);
	int count = 0;
	while(ros::ok())
	{
		std_msgs::String msg;
		std::stringstream ss;
		ss<<"Hello World: "<<count;
		msg.data = ss.str();
		ROS_INFO("%s",msg.data.c_str());
		chatter_pub.publish(msg);
		ros::spinOnce();
		loop_rate.sleep();
		++count;
	}
	return 0;
}
*/
