#include "ros/ros.h"
#include "sensor_msgs/LaserScan.h"

void chatterCallback(const sensor_msgs::LaserScan::ConstPtr& msg)
{
    ros::NodeHandle n;
    ROS_INFO("I heard: [%d]", msg->header.seq);
    ros::Publisher pub = n.advertise<sensor_msgs::LaserScan>("scan",1000);
    pub.publish(msg);
}

int main(int argc, char **argv)
{
    ros::init(argc, argv, "redirector2");
    ros::NodeHandle n;
    ros::Subscriber sub = n.subscribe<sensor_msgs::LaserScan>("lms200", 1000, chatterCallback); 
    ros::spin();
    return 0;
}



/*
diagnostic_updater::DiagnosedPublisher<sensor_msgs::LaserScan> *pub
	sensor_msgs::LaserScan scan_msg;
	scan_msg.header.frame_id = frame_id;
	pub->publish(scan_msg);
	scan_msg.angle_min = angle_max;
	scan_msg.angle_max = angle_min;
*/
