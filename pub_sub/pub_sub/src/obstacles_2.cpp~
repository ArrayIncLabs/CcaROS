#include "ros/ros.h"
#include "sensor_msgs/LaserScan.h"
#include "std_msgs/String.h"
#include <sstream>

void switcherCallback(const sensor_msgs::LaserScan::ConstPtr& msg)
{
    ros::NodeHandle p;
    ros::Publisher state_pub = p.advertise<std_msgs::String>("robotState",1000);
    int f=0;
    for(int i=0; i<msg->ranges.size(); i++){
	if(msg->ranges[i]<1.5f){
		f=1;
		break;
	}
    }
    if(f==1){
	std_msgs::String msg;
	std::stringstream ss;
	ss<<"1";
	msg.data = ss.str();
	state_pub.publish(msg);
    }else{
	std_msgs::String msg;
	std::stringstream ss;
	ss<<"0";
	msg.data = ss.str();
	state_pub.publish(msg);
    }
}

int main(int argc, char **argv)
{
    ros::init(argc, argv, "switcher");
    ros::NodeHandle n;
    ros::Subscriber sub = n.subscribe<sensor_msgs::LaserScan>("scan", 1000, switcherCallback);
    ros::spin();
    return 0;
}









//ROS_INFO("Got a transform! x = %f, y = %f",transform.getOrigin().x(),transform.getOrigin().y())

